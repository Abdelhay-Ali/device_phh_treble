#selinux: Boot Huawei p20 lite Hi6250
allow kernel system_data_file:dir {open read setattr write};
allow kernel system_data_file:file {append getattr open setattr};
allow kernel device:chr_file {create open setattr write};
allow kernel device:dir {add_name write};
allow kernel self:capability mknod;
allow kernel unlabeled:file open;
allow init hidl_base_hwservice:hwservice_manager add;
allow init hwservicemanager:binder call transfer;
allow init sys_dev_block:lnk_file read;
allow init sysfs_led:file setattr;
allow init system_file:file execute_no_trans;
allow init vendor_file:file execute_no_trans;
allow vendor_init device:chr_file getattr;
allow vendor_init splash2_data_file:dir {add_name getattr open read setattr write};
allow vendor_init splash2_data_file:file {create getattr open setattr write};
allow vendor_init splash2_data_file:filesystem getattr;
allow vendor_init system_data_file:dir setattr;
allow vendor_init teecd_data_file_system:dir {getattr relabelto};
allow hwservicemanager init:binder call;
allow init splash2_data_file:dir getattr;
allow init splash2_data_file:filesystem {mount relabelfrom relabelto};
allow init sys_block_mmcblk0:file {open write};
allow init sys_block_mmcblk0:lnk_file read;
allow init sysfs_zram:lnk_file read;
allow init teecd_data_file:dir mounton;
allow init teecd_data_file:filesystem {mount relabelfrom relabelto};


allow ueventd proc:file r_file_perms;
permissive ueventd;

type teecd_data_file, file_type;
type dmd_device, file_type;
allow hal_fingerprint_server dmd_device:chr_file rw_file_perms;
allow hal_fingerprint_server sysfs:file rw_file_perms;
allow tee hal_fingerprint_default:process { getattr };
allow tee teecd_data_file:dir { search read write create getattr add_name open };
allow tee teecd_data_file:file { read write create getattr open };
allow tee system_data_file:dir { getattr };

type oeminfo_nvm, domain;
type oeminfo_nvm_device, file_type;
allowxperm oeminfo_nvm oeminfo_nvm_device:blk_file ioctl { 0x1260 };

allow charger rootfs:file { ioctl read getattr lock map execute entrypoint open };

# This is use exclusively for init to relabel /dev/selinux from tmpfs to device
allow kernel tmpfs:{ dir file } relabelfrom;
allow kernel device:{ dir file } relabelto;

# system/core/init/mount_handler.cpp likes to browse all /sys/block/xxx, so let it do so...
type sys_block_sdd, file_type;
allow init { sysfs sys_block_sdd }:dir r_dir_perms;
allow init { sysfs sys_block_sdd }:file r_file_perms;
allow init { sysfs sys_block_sdd }:lnk_file read;

allowxperm vendor_init { teecd_data_file }:dir ioctl { 
  FS_IOC_GET_ENCRYPTION_POLICY
  FS_IOC_SET_ENCRYPTION_POLICY
};
